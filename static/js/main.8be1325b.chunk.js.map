{"version":3,"sources":["component/InfoBox/InfoBox.jsx","util.jsx","component/Map/Map.jsx","component/LineGraph/lineGraph.jsx","component/Table/table.jsx","App.js","index.js"],"names":["InfoBox","_ref","title","cases","total","active","isRed","onClick","react_default","a","createElement","Card","className","concat","CardContent","Typography","color","gutterBottom","sortData","data","sortedData","Object","toConsumableArray","sort","b","prettyShowStat","stat","numeral","format","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","Map","countries","casesType","center","zoom","es_Map","TileLayer","attribution","url","arguments","length","undefined","map","country","Circle","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","LineGraph","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","setState","stop","state","options","legend","display","elements","points","maintainAspectRatio","tooltips","node","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","es","datasets","backgroundColor","borderColor","React","Component","Table","App","onCountryChange","e","countryCode","target","mapCenter","mapZoom","tableData","lng","mapCountries","_this2","apply","allInfo","_ref2","_callee2","_context2","sent","name","iso2","console","log","t0","message","getCountriesData","_this3","FormControl","Select","variant","onChange","MenuItem","key","component_InfoBox_InfoBox","todayCases","todayRecovered","todayDeaths","component_Map_Map","Table_table","lineGraph","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8be1325b.chunk.js","sourcesContent":["import React from 'react';\nimport { \n    Card,\n    CardContent,\n    Typography,\n    \n} from '@material-ui/core';\n\nimport './InfoBox.css';\n\nfunction InfoBox({ title, cases, total, active, isRed, onClick}) {\n    return(\n       <Card\n        onClick= {onClick}\n         className= {`infoBox ${active && \"infoBox-selected\"} ${isRed && \"infoBox-red\"}`} >\n           <CardContent>\n               <Typography color=\"textSecondary\" gutterBottom>\n                   {title}\n               </Typography>\n               { <h2 className={`infoBox-cases ${!isRed && \"infoBox-cases-green\"}`}>\n                   {cases}\n               </h2>}\n\n               <Typography className=\"infoBox-total\" color=\"textSecondary\">\n                   {total} Total\n               </Typography>\n           </CardContent>\n       </Card>\n    )\n}\n\n\nexport default InfoBox;","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n  return sortedData;\n};\n\nexport const prettyShowStat = (stat) => {\n  return stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n};\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204,16,52)\",\n    half_op: \"rgba(204,16,52,0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125,215,267,0.5)\",\n    half_op: \"rgba(251,215,267,0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"fb4443\",\n    rgb: \"rgb(251,68,67)\",\n    half_op: \"rgba(251,68,57,0.5)\",\n    multiplier: 2000,\n  },\n};\n\nexport const showDataOnMap = (data, casesType = \"cases\") => {\n  return data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            style={{\n              backgroundImage: `url(${country.countryInfo.flag})`,\n            }}\n            className=\"info-flag\"\n          >\n            <div className=\"info-name\">{country.country}</div>\n            <div className=\"info-confirmed\">\n              Cases: {numeral(country.cases).format(\"0.0\")}\n            </div>\n            <div className=\"info-recovered\">\n              Recovered: {numeral(country.cases).format(\"0.0\")}\n            </div>\n            <div className=\"info-deaths\">\n              Deaths: {numeral(country.cases).format(\"0.0\")}\n            </div>\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n};\n","import React from 'react';\nimport './map.css';\nimport {Map as LeafletMap, TileLayer} from 'react-leaflet';\nimport { showDataOnMap} from '../../util';\n\n\nconst Map = ({countries, casesType, center, zoom}) => {\n  return (\n      <div className =\"map\">\n        <LeafletMap center={center} zoom={zoom}>\n\n      <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n   \n   {showDataOnMap(countries,casesType)}\n\n\n        </LeafletMap>\n      </div>\n  )\n}\n\nexport default Map;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\n//data is from  https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nclass LineGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n  }\n  buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n  };\n\n  fetchData = async () => {\n    await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n      .then((response) => response.json())\n      .then((data) => {\n        let chartData = this.buildChartData(data, this.props.casesType);\n        this.setState({\n          data: chartData,\n        });\n      });\n  };\n\n  componentDidUpdate() {\n    this.fetchData();\n  }\n  render() {\n    // The code below isfrom chartjs .... :)\n    const options = {\n      legend: {\n        display: false,\n      },\n      elements: {\n        points: {\n          radius: 0,\n        },\n      },\n      maintainAspectRatio: false,\n      tooltips: {\n        node: \"index\",\n        intersect: false,\n        callbacks: {\n          label: function (tooltipItem, data) {\n            return numeral(tooltipItem.value).format(\"+0.0\");\n          },\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            type: \"time\",\n            time: {\n              format: \"MM/DD/YY\",\n              tooltipFormat: \"ll\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              callback: function (value, index, values) {\n                return numeral(value).format(\"0a\");\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const { data } = this.state;\n    return (\n      <div>\n        {data.length > 0 && (\n          <Line\n            data={{\n              datasets: [\n                {\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                  borderColor: \"#CC1034\",\n                  data: data,\n                },\n              ],\n            }}\n            options={options}\n          />\n        )}\n        {/* the code above is from chartjs .. :) */}\n      </div>\n    );\n  }\n}\n\nexport default LineGraph;\n","import React from 'react';\nimport './table.css'\nimport numeral from 'numeral'; \n\nconst Table = ({countries}) => {\n    return (\n        <div className='table' >\n            {countries.map((country) => (\n                    <tr>\n                    <td>{country.country}</td>\n                    <td>\n                        <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n                    </td>\n                    </tr>\n            ) ) \n            }\n        </div>\n    )\n}\n\nexport default Table","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport InfoBox from \"./component/InfoBox/InfoBox\";\nimport numeral from \"numeral\";\nimport Map from \"./component/Map/Map\";\nimport LineGraph from \"./component/LineGraph/lineGraph\";\nimport Table from \"./component/Table/table\";\nimport { prettyShowStat, sortData } from \"./util\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      countries: [],\n      country: \"worldwide\",\n      casesType: \"cases\",\n      countryInfo: {},\n      tableData: [],\n      mapCenter: { lat: 34.80746, lng: -40.4796 },\n      mapZoom: 3,\n      mapCountries: [],\n    };\n  }\n  componentDidMount() {\n    const allInfo = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({\n            countryInfo: data,\n          });\n        });\n    };\n    allInfo();\n\n    const getCountriesData = async () => {\n      try {\n        const fetchData = await fetch(\n          \"https://disease.sh/v3/covid-19/countries\"\n        );\n        const data = await fetchData.json();\n        const countries = data.map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso2,\n        }));\n        let sortedData = sortData(data);\n        this.setState({\n          countries: countries,\n          tableData: sortedData,\n          mapCountries: data,\n        });\n        console.log(data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    getCountriesData();\n  }\n\n  onCountryChange = (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          mapCenter: [data.countryInfo.lat, data.countryInfo.long],\n          mapZoom: 4,\n          country: countryCode,\n          countryInfo: data,\n        });\n      });\n  };\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app-left\">\n          <div className=\"app-header\">\n            <h1> COVID-19 Tracker</h1>\n            <FormControl className=\"app-dropdowm\">\n              <Select\n                variant=\"outlined\"\n                value={this.state.country}\n                onChange={this.onCountryChange}>\n                <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                {this.state.countries.map((country) => (\n                  <MenuItem key={country.name} value={country.value}>\n                    {country.name}\n                  </MenuItem>\n                ))}\n\n                {/* <MenuItem value = 'Nigeria'>Nigeria</MenuItem>\n                <MenuItem value = 'China'>China</MenuItem> */}\n              </Select>\n            </FormControl>\n          </div>\n\n          <div className=\"app-stats\">\n            <InfoBox\n              onClick={(e) => {\n                this.setState({\n                  casesType: \"cases\",\n                });\n              }}\n              title=\"Coronavirus Cases\"\n              cases={prettyShowStat(this.state.countryInfo.todayCases)}\n              total={numeral(this.state.countryInfo.cases).format(\"0.0a\")}\n              active={this.state.casesType === \"cases\"}\n              isRed\n            />\n            <InfoBox\n              onClick={(e) => {\n                this.setState({\n                  casesType: \"recovered\",\n                });\n              }}\n              title=\"Recovered\"\n              active={this.state.casesType === \"recovered\"}\n              cases={prettyShowStat(this.state.countryInfo.todayRecovered)}\n              total={numeral(this.state.countryInfo.recovered).format(\"0.0a\")}\n            />\n            <InfoBox\n              onClick={(e) => {\n                this.setState({\n                  casesType: \"deaths\",\n                });\n              }}\n              title=\"Death\"\n              isRed\n              active={this.state.casesType === \"deaths\"}\n              cases={prettyShowStat(this.state.countryInfo.todayDeaths)}\n              total={numeral(this.state.countryInfo.deaths).format(\"0.0a\")}\n            />\n          </div>\n          <Map\n            countries={this.state.mapCountries}\n            casesType={this.state.casesType}\n            center={this.state.mapCenter}\n            zoom={this.state.mapZoom}\n          />\n        </div>\n\n        <Card className=\"app-right\">\n          <CardContent>\n            <div className=\"app-information\">\n              <h3>Live Cases by Country</h3>\n              <Table countries={this.state.tableData} />\n              <h3>Worldwide new {this.state.casesType}</h3>\n              <LineGraph casesType={this.state.casesType} />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}